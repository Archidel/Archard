buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

plugins {
	id 'net.ltgt.apt' version '0.19'
	id 'com.gorylenko.gradle-git-properties' version '1.5.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version =  "0.1.${buildTime()}"    

repositories {
    mavenCentral()   
}

eclipse {
	classpath {        
        file {
         	whenMerged {
         		def src = entries.find { it.path == 'src/main/java'}
                src.output = "/target/main"
                def  src2 = entries.find { it.path == 'src/main/resources'}
                src2.output = "/target/main"
                
                def src3 = entries.find { it.path == 'src/test/java'}
                src3.output = "/target/test"
                def  src4 = entries.find { it.path == 'src/test/resources'}
                src4.output = "/target/test"
         	}
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
//    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-cache")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.springframework.boot:spring-boot-starter-batch")
   	compile("org.springframework.boot:spring-boot-starter-data-jpa")
   	compile("org.springframework.boot:spring-boot-starter-integration")

    compile("io.jsonwebtoken:jjwt:0.9.0")
    compileOnly("org.projectlombok:lombok:1.18.4")
    compile("ch.qos.logback:logback-classic")
    compile("org.apache.commons:commons-collections4:4.2")
    compile("net.sf.ehcache:ehcache:2.10.6")
    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
   
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompile("junit:junit")
    
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}

springBoot  {
    buildInfo()
}

repositories {
    mavenCentral()   
}

def buildTime() {
    return new java.util.Date().getTime();
}
